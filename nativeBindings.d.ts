/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class Lz4DecoderStream {
  constructor()
  write(data: Buffer): Buffer
  finish(): Buffer
  isFinished(): boolean
}
export type LZ4DecoderStream = Lz4DecoderStream

export declare class Lz4EncoderStream {
  constructor()
  write(data: Buffer): void
  finish(): Buffer
  isFinished(): boolean
}
export type LZ4EncoderStream = Lz4EncoderStream

export declare function compress(data: string | Uint8Array, dict?: string | Uint8Array | undefined | null): Promise<Buffer>

export declare function compressFrame(data: string | Uint8Array): Promise<Buffer>

export declare function compressFrameSync(data: string | Buffer): Buffer

export declare function compressSync(data: string | Buffer, dict?: string | Buffer | undefined | null): Buffer

export declare function decompressFrame(data: string | Uint8Array): Promise<Buffer>

export declare function decompressFrameSync(data: string | Buffer): Buffer

export declare function uncompress(data: string | Uint8Array, dict?: string | Uint8Array | undefined | null): Promise<Buffer>

export declare function uncompressSync(data: string | Uint8Array, dict?: string | Uint8Array | undefined | null): Buffer
